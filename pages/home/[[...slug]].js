import Head from "next/head";
import { useRouter } from "next/router";
import Image from "next/image";

import NavBar from "components/navbar";
import Header from "components/header";
import Link from "next/link";

import Footer from "components/footer";
import AppLayout from "components/layout/AppLayout";

import apiURL from "/utils/urls";
import { getAccount } from "/utils/helper";
import { appItems } from "utils/common";

import styles from "/styles/explore.module.scss";

export default function ExplorePage(props) {
  const { account, users } = props;
  const router = useRouter();

  const renderAccounts = () => {
    return users.map((user) => {
      return (
        user.id != account.id && (
          <li className={styles.userItem} key={user.id}>
            <Link href={`/${user.username}`}>
              <a className={styles.link}>
                <div className={styles.picture}>
                  {user.photo && (
                    <Image
                      src={user.photo}
                      alt={user.name}
                      className={styles.photo}
                      height={250}
                      width={250}
                      layout="fixed"
                      loading="lazy"
                    />
                  )}
                </div>
                <div className={styles.account_info}>
                  <div className={styles.info}>
                    <div className={styles.name}>{user.name}</div>
                    {user.isVerified && (
                      <Image
                        src="/images/verify.png"
                        alt="Verified"
                        className={styles.verified}
                        layout="fixed"
                        height={16}
                        width={16}
                      />
                    )}
                  </div>
                  <div className={styles.username}>@{user.username}</div>
                </div>
              </a>
            </Link>
          </li>
        )
      );
    });
  };

  const renderPagination = () => {
    const { pages } = props;
    return pages.map((page, index) => {
      console.log(router.query.page, page, typeof page);
      const selected =
        parseInt(router.query.page) === page ||
        (router.query.page === undefined && page === 1);
      return (
        <li key={index}>
          <Link href={`/home?page=${page}`}>
            <a
              className={
                selected ? `${styles.link} ${styles.selected}` : styles.link
              }
            >
              {page}
            </a>
          </Link>
        </li>
      );
    });
  };

  const renderList = (withPagination) => (
    <>
      <ul className={styles.usersList}>{renderAccounts()}</ul>
      {withPagination && (
        <ul className={styles.pagination}>{renderPagination()}</ul>
      )}
    </>
  );

  return (
    <>
      <Head>
        <title>
          CarePack: Partner and Transact with businesses securely on the
          Blockchain.
        </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppLayout
        apps={appItems}
        account={account}
        title={"Home"}
        appUrl="home"
        appName="Home"
      >
        <div className={styles.explore}>
          <div className={styles.content}>{renderList()}</div>
        </div>
      </AppLayout>
    </>
  );
}

export async function getServerSideProps(ctx) {
  const accountData = await getAccount(ctx, true, true);
  const { data: users } = await fetch(`${apiURL}/api/users`).then((res) =>
    res.json()
  );
  const getPageNumbers = () => {
    let pages = [];
    const num = Math.ceil(users.length / 10);
    for (let i = 1; i <= num; i++) {
      pages.push(i);
    }
    return pages;
  };
  return {
    ...accountData,
    props: {
      ...accountData.props,
      users,
      pages: getPageNumbers(),
    },
  };
}
