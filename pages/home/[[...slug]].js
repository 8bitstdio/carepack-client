import Head from "next/head";
import { useRouter } from "next/router";

import AppLayout from "components/layout/AppLayout";

import apiURL from "/utils/urls";
import { getAccount } from "/utils/helper";
import { appItems } from "utils/common";

import styles from "/styles/explore.module.scss";
import { getSubscribers, getSubscribed } from "utils/helper";
import Header from "components/header";
import { useEffect } from "react";
import { Button } from "react-bootstrap";

export default function ExplorePage(props) {
  const { account } = props;
  const router = useRouter();

  const loginToFB = () => {
    
  }

  return (
    <>
      <Head>
        <title>
          CarePack: Partner and Transact with businesses securely on the
          Blockchain.
        </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppLayout
        apps={appItems}
        account={account}
        title={"Home"}
        appUrl="home"
        appName="Home"
        subscribed={account.subscribed}
      >
        <div className={styles.explore}>
          <Header title={`Howdy, ${account.name}`}/>
          <div className={styles.content}>
            <div className={styles.header}>
              <Button type="primary" onClick={loginToFB}>Login to Facebook</Button>
            </div>
            <div className={styles.banner}></div>
          </div>
        </div>
      </AppLayout>
    </>
  );
}

export async function getServerSideProps(ctx) {
  const ig_url = '';

  const accountData = await getAccount(ctx, true, true);
  const { data: users } = await fetch(`${apiURL}/api/users`).then((res) =>
    res.json()
  );
  const getPageNumbers = () => {
    let pages = [];
    const num = Math.ceil(users.length / 10);
    for (let i = 1; i <= num; i++) {
      pages.push(i);
    }
    return pages;
  };
  const subscribers = await getSubscribers(accountData?.props?.account);
  const subscribed = await getSubscribed(accountData?.props?.account);
  return {
    ...accountData,
    props: {
      account: {
        ...accountData?.props?.account,
        subscribers: subscribers.data || [],
        subscribed: subscribed.data || [],
      },
      users,
      pages: getPageNumbers(),
    },
  };
}
